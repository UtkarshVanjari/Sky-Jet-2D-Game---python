import pygame
import time
import random
import sys

pygame.init()

gray = (74, 64, 67)
black = (0, 0, 0)
red = (3, 15, 252)
green = (248, 252, 0)
blue = (0, 250, 171)
bright_red = (252, 3, 3)
bright_green = (5, 250, 42)
bright_blue = (0, 0, 255)

display_width = 800
display_height = 600
gamedisplays = pygame.display.set_mode((display_width, display_height))
pygame.display.set_caption("Jet game")
clock = pygame.time.Clock()


jetimg = pygame.image.load('jet1.png')
backgroundpic = pygame.image.load("stone strip.png")
sky_strip = pygame.image.load("sky strip.png")
strip = pygame.image.load("whiteline.png")
intro_background = pygame.image.load("background 1.png")
instruction_background = pygame.image.load("background 2.png")
jet_width = 120

pause = False


def text_object(text, font):
    textsurface = font.render(text, True, black)
    return textsurface, textsurface.get_rect()

def text_objects(text, font):
    return text_object(text, font)

def message_display(text):
    largetext = pygame.font.Font("freesansbold.ttf", 80)
    textsurf, textrect = text_object(text, largetext)
    textrect.center = ((display_width / 2), (display_height / 2))
    gamedisplays.blit(textsurf, textrect)
    pygame.display.update()
    time.sleep(3)
    game_loop()

def crash():
    message_display("YOU CRASHED")

def button(msg, x, y, w, h, ic, ac, action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    if x + w > mouse[0] > x and y + h > mouse[1] > y:
        pygame.draw.rect(gamedisplays, ac, (x, y, w, h))
        if click[0] == 1 and action is not None:
            if action == "play":
                game_loop()
            elif action == "quit":
                pygame.quit()
                sys.exit()
            elif action == "intro":
                introduction()
            elif action == "menu":
                intro_loop()
            elif action == "pause":
                global pause
                pause = True
            elif action == "unpaused":
                unpaused()
    else:
        pygame.draw.rect(gamedisplays, ic, (x, y, w, h))
    smalltext = pygame.font.Font("freesansbold.ttf", 20)
    textsurf, textrect = text_object(msg, smalltext)
    textrect.center = ((x + (w / 2)), (y + (h / 2)))
    gamedisplays.blit(textsurf, textrect)

def intro_loop():
    intro = True
    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
        gamedisplays.blit(intro_background, (0, 0))
        largetext = pygame.font.Font('freesansbold.ttf', 110)
        TextSurf, TextRect = text_object("JET GAME", largetext)
        TextRect.center = (400, 230)
        gamedisplays.blit(TextSurf, TextRect)
        button("START", 150, 520, 100, 50, green, bright_green, "play")
        button("QUIT", 550, 520, 100, 50, red, bright_red, "quit")
        button("INSTRUCTION", 300, 520, 200, 50, blue, bright_blue, "intro")
        pygame.display.update()
        clock.tick(50)

def introduction():
    intro = True
    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
        gamedisplays.blit(instruction_background, (0, 0))
        largetext = pygame.font.Font('freesansbold.ttf', 80)
        smalltext = pygame.font.Font('freesansbold.ttf', 20)
        mediumtext = pygame.font.Font('freesansbold.ttf', 40)
        TextSurf, TextRect = text_object("INSTRUCTION", largetext)
        TextRect.center = ((400), (180))
        gamedisplays.blit(TextSurf, TextRect)
        sTextSurf, sTextRect = text_object("CONTROLS", mediumtext)
        sTextRect.center = ((400), (250))
        gamedisplays.blit(sTextSurf, sTextRect)
        controls = [
            ("P : PAUSE", 350),
            ("ARROW LEFT : LEFT TURN", 400),
            ("ARROW RIGHT : RIGHT TURN", 450),
            ("A : ACCELERATOR", 500),
            ("B : BRAKE", 550),
        ]
        for text, y in controls:
            surf, rect = text_object(text, smalltext)
            rect.center = (150, y)
            gamedisplays.blit(surf, rect)
        button("BACK", 600, 450, 100, 50, blue, bright_blue, "menu")
        pygame.display.update()
        clock.tick(30)

def paused():
    global pause
    while pause:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
        gamedisplays.blit(instruction_background, (0, 0))
        largetext = pygame.font.Font('freesansbold.ttf', 115)
        TextSurf, TextRect = text_objects("PAUSED", largetext)
        TextRect.center = ((display_width / 2), (display_height / 2))
        gamedisplays.blit(TextSurf, TextRect)
        button("CONTINUE", 150, 450, 150, 50, green, bright_green, "unpaused")
        button("RESTART", 350, 450, 150, 50, blue, bright_blue, "play")
        button("MAIN MENU", 550, 450, 200, 50, red, bright_red, "menu")
        pygame.display.update()
        clock.tick(30)

def unpaused():
    global pause
    pause = False

def obstacle(obs_startx, obs_starty, obs):
    obs_pic = pygame.image.load(f"missile {obs + 1}.png")
    gamedisplays.blit(obs_pic, (obs_startx, obs_starty))

def score_system(passed, score):
    font = pygame.font.SysFont(None, 25)
    text = font.render("Passed: " + str(passed), True, blue)
    score_text = font.render("Score: " + str(score), True, green)
    gamedisplays.blit(score_text, (0, 30))
    gamedisplays.blit(text, (0, 50))

def background():
    for y in [0, 200, 400]:
        gamedisplays.blit(backgroundpic, (0, y))
        gamedisplays.blit(backgroundpic, (720, y))
    gamedisplays.blit(sky_strip, (74, 1))
    for y in [0, 155]:
        gamedisplays.blit(strip, (43, y))
        gamedisplays.blit(strip, (705, y))

def jet(x, y):
    gamedisplays.blit(jetimg, (x, y))

def game_loop():
    global pause
    x = display_width * 0.46
    y = display_height * 0.7
    x_change = 0
    obstacle_speed = 9
    obs = 0
    obs_startx = random.randrange(200, (display_width - 200))
    obs_starty = -750
    obs_width = 120
    obs_height = 125
    passed = 0
    level = 0
    score = 0
    bumped = False

    while not bumped:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x_change = -5
                if event.key == pygame.K_RIGHT:
                    x_change = 5
                if event.key == pygame.K_a:
                    obstacle_speed += 2
                if event.key == pygame.K_b:
                    obstacle_speed -= 2
            if event.type == pygame.KEYUP:
                if event.key in [pygame.K_LEFT, pygame.K_RIGHT]:
                    x_change = 0

        x += x_change
        gamedisplays.fill(gray)
        background()
        obs_starty -= (obstacle_speed / 4)
        obstacle(obs_startx, obs_starty, obs)
        obs_starty += obstacle_speed
        jet(x, y)
        score_system(passed, score)

        if x > 790 - jet_width or x < 72:
            crash()

        if obs_starty > display_height:
            obs_starty = 0 - obs_height
            obs_startx = random.randrange(200, (display_width - 200))
            obs = random.randrange(0, 7)
            passed += 1
            score = passed * 10
            if passed % 10 == 0:
                level += 1
                obstacle_speed += 2
                largetext = pygame.font.Font("freesansbold.ttf", 80)
                textsurf, textrect = text_object("LEVEL " + str(level), largetext)
                textrect.center = ((display_width / 2), (display_height / 2))
                gamedisplays.blit(textsurf, textrect)
                pygame.display.update()
                time.sleep(3)

        if y < obs_starty + obs_height:
            if (x > obs_startx and x < obs_startx + obs_width) or (x + jet_width > obs_startx and x + jet_width < obs_startx + obs_width):
                crash()

        button("Pause", 650, 0, 150, 50, blue, bright_blue, "pause")
        pygame.display.update()

        if pause:
            paused()

        clock.tick(60)


intro_loop()
game_loop()
pygame.quit()
quit()
